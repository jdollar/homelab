# yaml-language-server: $schema=https://raw.githubusercontent.com/vidispine/hull/refs/heads/main/hull/values.schema.json

hull:
  config:
    specific:
      httpPort: 9117
      ingressHost: jackett.joeldollarhide.com
      freeleechIngessHost: jackett-freeleech.joeldollarhide.com

  objects:
    configmap:
      app:
        data:
          TZ:
            inline: "America/New_York"
          UMASK:
            inline: "002"
          PUID:
            inline: "1000"
          PGID:
            inline: "1000"
          AUTO_UPDATE:
            inline: "false"

    deployment:
      app:
        replicas: 1
        strategy:
          type: Recreate
        templateLabels:
          app.kubernetes.io/type: app
        pod:
          volumes:
            jackett-pvc-config-longhorn:
              active: persistentVolumeClaim
              persistentVolumeClaim:
                staticName: true
                claimName: jackett-pvc-config-longhorn
          containers:
            app:
              image:
                repository: lscr.io/linuxserver/jackett
                pullPolicy: IfNotPresent
                tag: _HT**Chart.appVersion
              ports:
                http:
                  containerPort: _HT*hull.config.specific.httpPort
                  protocol: TCP
              volumeMounts:
                jackett-pvc-config-longhorn:
                  name: jackett-pvc-config-longhorn
                  mountPath: /config
              resources:
                requests:
                  cpu: 400m
                  memory: 2Gi
                limits:
                  memory: 2Gi
      freeleech:
        replicas: 1
        strategy:
          type: Recreate
        templateLabels:
          app.kubernetes.io/type: app
        pod:
          volumes:
            jackett-freeleech-pvc-config-longhorn:
              active: persistentVolumeClaim
              persistentVolumeClaim:
                staticName: true
                claimName: jackett-freeleech-pvc-config-longhorn
          containers:
            app:
              image:
                repository: lscr.io/linuxserver/jackett
                pullPolicy: IfNotPresent
                tag: _HT**Chart.appVersion
              ports:
                http:
                  containerPort: _HT*hull.config.specific.httpPort
                  protocol: TCP
              volumeMounts:
                jackett-freeleech-pvc-config-longhorn:
                  name: jackett-freeleech-pvc-config-longhorn
                  mountPath: /config
              resources:
                requests:
                  cpu: 400m
                  memory: 2Gi
                limits:
                  memory: 2Gi

    service:
      app: &svc
        type: ClusterIP
        ports:
          http:
            port: _HT*hull.config.specific.httpPort
            targetPort: _HT*hull.config.specific.httpPort
            protocol: TCP

      freeleech: *svc

    ingress:
      app:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd

          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Jackett"
          gethomepage.dev/description: "Indexer"
          gethomepage.dev/group: "Applications"
          gethomepage.dev/icon: "jackett"
          gethomepage.dev/weight: "25"
        rules:
          app:
            host: _HT*hull.config.specific.ingressHost
            http:
              paths:
                root:
                  path: /
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: app
                      port:
                        name: http
        tls:
          app:
            enabled: true
            secretName: tls
            hosts:
              - _HT!
                [
                {{ (index . "$").Values.hull.config.specific.ingressHost }}
                ]
      freeleech:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd

          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Jackett (Freeleech)"
          gethomepage.dev/description: "Indexer"
          gethomepage.dev/group: "Applications"
          gethomepage.dev/icon: "jackett"
          gethomepage.dev/weight: "25"
        rules:
          app:
            host: _HT*hull.config.specific.freeleechIngessHost
            http:
              paths:
                root:
                  path: /
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: freeleech
                      port:
                        name: http
        tls:
          freeleech:
            enabled: true
            secretName: freeleach-tls
            hosts:
              - _HT!
                [
                {{ (index . "$").Values.hull.config.specific.freeleechIngessHost }}
                ]

    persistentvolumeclaim:
      jackett-pvc-config-longhorn:
        staticName: true
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 5Gi
      jackett-freeleech-pvc-config-longhorn:
        staticName: true
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 5Gi
