hull:
  config:
    specific:
      httpPort: 80
      dnsPort: 53
      ingressHost: pihole.joeldollarhide.com

  objects:
    configmap:
      app:
        data:
          TZ:
            inline: "America/New_York"
          VIRTUAL_HOST:
            inline: _HT*hull.config.specific.ingressHost
          PROXY_LOCATION:
            inline: _HT*hull.config.specific.ingressHost
          CORS_HOSTS: 
            inline: "homepage.joeldollarhide.com"
          FTLCONF_LOCAL_IPV4:  
            inline: "127.0.0.1"
          FTLCONF_misc_etc_dnsmasq_d:  
            inline: "true"
          FTLCONF_misc_dnsmasq_lines:  
            inline: "address=/*.joeldollarhide.com/10.0.0.91"

    deployment:
      app:
        replicas: 1
        strategy:
          type: Recreate
        templateLabels:
          app.kubernetes.io/type: app
        pod:
          volumes:
            pihole-pvc-dns:
              active: persistentVolumeClaim
              persistentVolumeClaim:
                staticName: true
                claimName: pihole-pvc-dns
            pihole-pvc-etc:
              active: persistentVolumeClaim
              persistentVolumeClaim:
                staticName: true
                claimName: pihole-pvc-etc
          containers:
            app:
              image:
                repository: pihole/pihole
                pullPolicy: IfNotPresent
                tag: _HT**Chart.appVersion
              ports:
                http:
                  containerPort: _HT*hull.config.specific.httpPort
                  protocol: TCP
                dnstcp:
                  containerPort: _HT*hull.config.specific.dnsPort
                  protocol: TCP
                dnsudp:
                  containerPort: _HT*hull.config.specific.dnsPort
                  protocol: UDP
              volumeMounts:
                pihole-pvc-dns:
                  name: pihole-pvc-dns
                  mountPath: /etc/dnsmasq.d
                pihole-pvc-etc:
                  name: pihole-pvc-etc
                  mountPath: /etc/pihole
              envFrom:
                app:
                  configMapRef:
                    name: app
                    optional: false
              env:
                FTLCONF_webserver_api_password:
                  valueFrom:
                    secretKeyRef:
                      staticName: true
                      name: pihole-secret
                      key: webpassword
                      optional: false

              resources:
                requests:
                  cpu: 50m
                  memory: 256Mi
                limits:
                  cpu: 50m
                  memory: 256Mi

    service:
      app:
        type: ClusterIP
        ports:
          http:
            port: _HT*hull.config.specific.httpPort
            targetPort: http
            protocol: TCP
          dnsudp:
            port: _HT*hull.config.specific.dnsPort
            targetPort: udp
            protocol: UDP
          dnstcp:
            port: _HT*hull.config.specific.dnsPort
            targetPort: tcp
            protocol: TCP

    ingress:
      app:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd

          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Pihole"
          gethomepage.dev/description: "Network wide ad blocking"
          gethomepage.dev/group: "Homelab"
          gethomepage.dev/icon: "pi-hole"
          gethomepage.dev/weight: "1"
        rules:
          app:
            host: _HT*hull.config.specific.ingressHost
            http:
              paths:
                root:
                  path: /
                  pathType: ImplementationSpecific
                  backend:
                    service:
                      name: app
                      port:
                        name: http
        tls:
          app:
            enabled: true
            secretName: tls
            hosts:
              - _HT!
                [
                {{ (index . "$").Values.hull.config.specific.ingressHost }}
                ]

    customresource:
      app:
        apiVersion: traefik.io/v1alpha1
        kind: IngressRouteUDP
        spec:
          entryPoints:
            - udpdns
          routes:
            - services:
                - name: _HT^app
                  port: _HT*hull.config.specific.dnsPort

      app-tcp:
        apiVersion: traefik.io/v1alpha1
        kind: IngressRouteTCP
        spec:
          entryPoints:
            - tcpdns
          routes:
            - match: HostSNI(`*`)
              services:
                - name: _HT^app
                  port: _HT*hull.config.specific.dnsPort

      pihole-cors-middleware:
        staticName: true
        apiVersion: traefik.io/v1alpha1
        kind: Middleware
        spec:
          headers:
            accessControlAllowMethods:
              - "GET"
              - "OPTIONS"
              - "PUT"
            accessControlAllowOriginList:
              - "https://homepage.joeldollarhide.com"
              - "http://homepage.joeldollarhide.com"
            accessControlMaxAge: 100
            addVaryHeader: true

      pihole-middleware:
        staticName: true
        apiVersion: traefik.io/v1alpha1
        kind: Middleware
        spec:
          chain:
            middlewares:
            - name: redirect-https
            - name: pihole-cors-middleware

    persistentvolumeclaim:
      pihole-pvc-dns:
        staticName: true
        accessModes:
          - ReadWriteOnce
        storageClassName: nfs
        resources:
          requests:
            storage: 5Mi
      pihole-pvc-etc:
        staticName: true
        accessModes:
          - ReadWriteOnce
        storageClassName: nfs
        resources:
          requests:
            storage: 256Mi
